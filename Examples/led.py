import spidev
import time

spi = spidev.SpiDev()
spi.open(1,0)  # /dev/spidev1.0

matrix = [
		  [0x00, 0x7C, 0xFE, 0xB2, 0x9A, 0x8E, 0xFE, 0x7C],  # 0
		  [0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0x40, 0x00],  # 1
		  [0x00, 0x00, 0x62, 0xF2, 0x92, 0x9A, 0xCE, 0x46],  # 2
		  [0x00, 0x00, 0x6C, 0xFE, 0x92, 0x92, 0xC6, 0x44],  # 3
		  [0x00, 0x08, 0xFE, 0xFE, 0xC8, 0x68, 0x38, 0x18],  # 4
		  [0x00, 0x00, 0x9C, 0xBE, 0xA2, 0xA2, 0xE6, 0xE4],  # 5
		  [0x00, 0x00, 0x0C, 0x9E, 0x92, 0xD2, 0x7E, 0x3C],  # 6
		  [0x00, 0x00, 0xE0, 0xF0, 0x9E, 0x8E, 0x80, 0x80],  # 7
		  [0x00, 0x00, 0x6C, 0xFE, 0x92, 0x92, 0xFE, 0x6C],  # 8
		  [0x00, 0x00, 0x78, 0xFC, 0x96, 0x92, 0xF2, 0x60],  # 9
		  [0x00, 0x3E, 0x7E, 0xC8, 0xC8, 0x7E, 0x3E, 0x00],  # A
		  [0x00, 0x6C, 0xFE, 0x92, 0x92, 0xFE, 0xFE, 0x00],  # B
		  [0x00, 0x44, 0xC6, 0x82, 0x82, 0xC6, 0x7C, 0x38],  # C
		  [0x00, 0x38, 0x7C, 0xC6, 0x82, 0xFE, 0xFE, 0x00],  # D
		  [0x00, 0x82, 0x82, 0x92, 0x92, 0xFE, 0xFE, 0x00],  # E
		  [0x00, 0x80, 0x80, 0x90, 0x90, 0xFE, 0xFE, 0x00],  # F
		  [0x00, 0x4E, 0xCE, 0x8A, 0x82, 0xC6, 0x7C, 0x38],  # G
		  [0x00, 0xFE, 0xFE, 0x10, 0x10, 0xFE, 0xFE, 0x00],  # H
		  [0x00, 0x00, 0x00, 0xFE, 0xFE, 0x00, 0x00, 0x00],  # I
		  [0x00, 0xFC, 0xFE, 0x02, 0x02, 0x0E, 0x0C, 0x00],  # J
		  [0x00, 0xC6, 0xEE, 0x38, 0x10, 0xFE, 0xFE, 0x00],  # K
		  [0x00, 0x02, 0x02, 0x02, 0x02, 0xFE, 0xFE, 0x00],  # L
		  [0x00, 0xFE, 0xFE, 0x70, 0x38, 0x70, 0xFE, 0xFE],  # M
		  [0x00, 0xFE, 0xFE, 0x18, 0x30, 0x60, 0xFE, 0xFE],  # N
		  [0x00, 0x7C, 0xFE, 0x82, 0x82, 0xFE, 0x7C, 0x00],  # O
		  [0x00, 0x60, 0xF0, 0x90, 0x90, 0xFE, 0xFE, 0x00],  # P
		  [0x00, 0x7A, 0xFE, 0x8E, 0x84, 0xFC, 0x78, 0x00],  # Q
		  [0x00, 0x66, 0xFE, 0x98, 0x90, 0xFE, 0xFE, 0x00],  # R
		  [0x00, 0x4C, 0xCE, 0x9A, 0xB2, 0xF6, 0x64, 0x00],  # S
		  [0x00, 0x80, 0x80, 0xFE, 0xFE, 0x80, 0x80, 0x00],  # T
		  [0x00, 0xFE, 0xFE, 0x02, 0x02, 0xFE, 0xFC, 0x00],  # U
		  [0x00, 0xF8, 0xFC, 0x06, 0x06, 0xFC, 0xF8, 0x00],  # V
		  [0x00, 0xFE, 0xFE, 0x0C, 0x18, 0x0C, 0xFE, 0xFE],  # W
		  [0x00, 0xC6, 0xEE, 0x38, 0x38, 0xEE, 0xC6, 0x00],  # X
		  [0x00, 0xE0, 0xF0, 0x1E, 0x1E, 0xF0, 0xE0, 0x00],  # Y
		  [0x00, 0xC2, 0xE2, 0xB2, 0x9A, 0x8E, 0x86, 0x82],  # Z
		  [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],  # Space
]

Animation = [
			 [0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00],
			 [0x00, 0x00, 0x18, 0x24, 0x24, 0x18, 0x00, 0x00],
			 [0x00, 0x18, 0x24, 0x42, 0x42, 0x24, 0x18, 0x00],
			 [0x18, 0x24, 0x42, 0x81, 0x81, 0x42, 0x24, 0x18],
			 [0x00, 0x18, 0x24, 0x42, 0x42, 0x24, 0x18, 0x00],
			 [0x00, 0x00, 0x18, 0x24, 0x24, 0x18, 0x00, 0x00],
			 [0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00],
]

columns = [0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08]

# Initialize MAX7219
spi.writebytes([0x09])  # decoding :BCD
spi.writebytes([0x00])

spi.writebytes([0x0A])  # brightness
spi.writebytes([0x03])

spi.writebytes([0x0B])  # scanlimit; 8 LEDs
spi.writebytes([0x07])

spi.writebytes([0x0C])  # power-down mode: 0. normal mode:1
spi.writebytes([0x01])

spi.writebytes([0x0F])  # test display: 1; EOT. display: 0
spi.writebytes([0x00])


"""
for i in range(0,8):
	spi.xfer([columns[i],matrix[30][i]])
time.sleep(0.8)
for i in range(0,8):
	spi.xfer([columns[i],matrix[19][i]])
time.sleep(0.8)
for i in range(0,8):
	spi.xfer([columns[i],matrix[17][i]])
time.sleep(0.8)
for i in range(0,8):
	spi.xfer([columns[i],matrix[11][i]])
time.sleep(0.8)
for i in range(0,8):
	spi.xfer([columns[i],matrix[22][i]])
time.sleep(0.8)
for i in range(0,8):
	spi.xfer([columns[i],matrix[0][i]])
time.sleep(1)

for j in range(0, len(Animation)):
	for i in range(0,8):
		spi.xfer([columns[i],Animation[j][i]])
	time.sleep(0.1)
for j in range(0, len(Animation)):
	for i in range(0,8):
		spi.xfer([columns[i],Animation[j][i]])
	time.sleep(0.1)
time.sleep(1)
"""

for j in range(0, len(matrix)):
	for i in range(0,8):
		spi.xfer([columns[i], matrix[j][i]])
	time.sleep(0.8)

spi.close

